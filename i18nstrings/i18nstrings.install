<?php
// $Id: i18nstrings.install,v 1.2.2.19 2010/05/17 13:55:38 jareyero Exp $

/**
 * @file
 * Installation file for i18nstrings module.
 */

function i18nstrings_install() {
  // Create database tables.
  drupal_install_schema('i18nstrings');

  // Set module weight for it to run after core modules.
  db_query("UPDATE {system} SET weight = 10 WHERE name = 'i18nstrings' AND type = 'module'");

  $ret = array();

  // Add a field to track whether a translation needs updating.
  db_add_field($ret, 'locales_target', 'i18n_status', array('type' => 'int', 'not null' => TRUE, 'default' => 0));

  // Add custom index to locales_source table.
  db_add_index($ret, 'locales_source', 'textgroup_location', array(array('textgroup', 30), 'location'));
}

function i18nstrings_uninstall() {
  $ret = array();

  // Create database tables.
  drupal_uninstall_schema('i18nstrings');
  // @TODO locale table cleanup, think about it.
  // Should we drop all strings for groups other than 'default' ?

  // Drop custom field.
  db_drop_field($ret, 'locales_target', 'i18n_status');
  // Drop custom index.
  db_drop_index($ret, 'locales_source', 'textgroup_location');
  // May be a left over variable
  variable_del('i18nstrings_update_skip');
}

/**
 * Implements of hook_schema().
 */
function i18nstrings_schema() {
  $schema['i18n_strings'] = array(
    'description' => 'Metadata for source strings.',
    'fields' => array(
      'lid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Source string ID. References {locales_source}.lid.',
      ),
      'objectid' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Object ID.',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Object type for this string.',
      ),
      'property' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Object property for this string.',
      ),
      'objectindex' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Integer value of Object ID.',
      ),
      'format' => array(
        'description' => "The input format used by this string.",
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),

    ),
    'primary key' => array('lid'),
  );
  return $schema;
}

/**
 * Implements of hook_schema_alter().
 */
function i18nstrings_schema_alter(&$schema) {
  // Add index for textgroup and location to {locales_source}.
  $schema['locales_source']['indexes']['textgroup_location'] = array(array('textgroup', 30), 'location');
  // Add field for tracking whether translations need updating.
  $schema['locales_target']['fields']['i18n_status'] = array(
    'description' => 'A boolean indicating whether this translation needs to be updated.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
}
